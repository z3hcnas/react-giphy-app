{"version":3,"sources":["components/adCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cts","type","value","onChange","target","placeholder","protoTypes","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sMAGA,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EACAC,mBAAS,IADT,mBAC7BC,EAD6B,KACjBC,EADiB,KAepC,OACE,sBAAMC,SATe,SAAAC,GACxBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKf,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdtB,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,QAawCG,YAAY,8BAK/Ef,EAAYgB,WAAa,CACrBf,cAAegB,IAAUC,KAAKC,YAGnBnB,Q,QClBAoB,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,S,uBCNEK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBf,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOe,EAAa,EAAbA,OAClC,MAAO,CACLhB,GAAIA,EACJC,MAAOA,EACPC,IAAG,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBf,QAXb,kBAcdY,GAdc,4CAAH,sDCyBLI,EArBC,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACd1B,mBAAS,CACjCgC,KAAM,GACNM,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACRhB,EAAQC,GAAUgB,MAAK,SAACC,GACtBC,YAAW,WACTC,QAAQC,IAAIH,GACZH,EAAS,CACPR,KAAMW,EACNL,SAAS,MAEV,UAEJ,IAEIC,EDhB2BQ,CAAarB,GAAjCS,EADkB,EACxBH,KAAcM,EADU,EACVA,QACtB,OACE,qCACE,6BAAKZ,IACL,sBAAKJ,UAAU,YAAf,UACGgB,GACC,qBACEhB,UAAU,UACVC,IAAI,+DAIPY,EAAOD,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAI7B,cEQjB8B,EAtBM,WAAM,MAEWjD,mBAAS,CAC3C,oBAHuB,mBAElBkD,EAFkB,KAENnD,EAFM,KAMzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEDmD,EAAWhB,KAAI,SAAAR,GAAQ,OAC1B,cAAC,EAAD,CAASA,SAAYA,GAAkBA,Y,MCXzCyB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.41c47528.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction AddCategory({setCategories}) {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInput = (e) => {\n    setInputValue(e.target.value);\n  };\n\n    const handleSubmit = e => {\n\te.preventDefault()\n\tif (inputValue.trim().length > 1) {\n\t    setCategories(cts => [inputValue, ...cts])\n\t    setInputValue('')\n\t}\n    }\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input type=\"text\" value={inputValue} onChange={handleInput} placeholder=\"Introduce your category\" />\n    </form>\n  );\n}\n\nAddCategory.protoTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","import React from \"react\";\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInDown\">\n      <img src={url} alt={title} />\n      <p> {title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&api_key=ixMKW0lM17OYspIqWsVGymB3uHdTYMs9&limit=10`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map(({ id, title, images }) => {\n    return {\n      id: id,\n      title: title,\n      url: images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React, { useState, useEffect } from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n  return (\n    <>\n      <h3>{category}</h3>\n      <div className=\"card-grid\">\n        {loading && (\n          <img\n            className=\"loading\"\n            src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\"\n          />\n        )}\n\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setTimeout(() => {\n        console.log(imgs);\n        setState({\n          data: imgs,\n          loading: false,\n        });\n      }, 200);\n    });\n  }, []);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from './components/adCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = () => {\n  //const categories =\n  const [categories, setCategories] = useState([\n    \"My hero academy\",\n  ]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories}/>\n      <hr />\n      <ol>\n        {\n\t    categories.map(category => ( \n\t\t<GifGrid category= { category } key= { category }/>\n\t    ))\n\t}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from './GifExpertApp'\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}